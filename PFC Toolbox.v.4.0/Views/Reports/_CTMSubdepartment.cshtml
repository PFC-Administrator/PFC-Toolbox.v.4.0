@{
    ViewBag.Title = "Contribution to Margin by Subdepartment";
    Layout = "~/Views/Shared/_Layout.cshtml";

    @model List<PFC_Toolbox.v._4._0.Models.CTMSubdepartmentModel>

    var startDate = Request["startDate"];
    var endDate = Request["endDate"];
}

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" />
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.5.4/css/buttons.dataTables.min.css" />
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/select/1.2.7/css/select.dataTables.min.css" />
<link rel="stylesheet" type="text/css" href="https://editor.datatables.net/extensions/Editor/css/editor.dataTables.min.css" />
<link rel="stylesheet" type="text/css" href="~/Content/Custom.css" />

<h1 style="float:right;"><img src="~/Content/PFC_Logo_128px.png" width="100" height="100">@(ViewBag.Store)</h1>
<h2 style="float:left;">Contribution to Margin by Subdepartment</h2>
<hr style="clear:both" />
<h3>@(ViewBag.SdpCode) - @(ViewBag.SdpDesc)</h3>
<h4>@startDate &nbsp;&nbsp; to &nbsp;&nbsp; @endDate</h4>

<br />

<div>
    <fieldset title="Item Results">
        <table id="results" class="display text-nowrap compact" style="width:100%">
            <thead>
                <tr>
                    <th class="all">Item Code</th>
                    <th class="all">Brand</th>
                    <th class="all">Description</th>
                    <th class="all">Weight</th>
                    <th class="all">Quantity</th>
                    <th class="all">Total Sales</th>
                    <th class="all">Retail</th>
                    <th class="all">Cost</th>
                    <th class="none">Vendor ID</th>
                    <th class="none">Reorder</th>
                    <th class="all">% of Sales</th>
                    <th class="all">Applied Margin</th>
                    <th class="all">CTM</th>
                </tr>
            </thead>
            <tbody>
                @{
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.ItemCode)</td>
                            <td>@Html.DisplayFor(modelItem => item.ItemBrand)</td>
                            <td>@Html.DisplayFor(modelItem => item.ItemDescription)</td>
                            <td>@Html.DisplayFor(modelItem => item.SalesWeight)</td>
                            <td>@Html.DisplayFor(modelItem => item.SalesQuantity)</td>
                            <td>@Html.DisplayFor(modelItem => item.SalesTotal)</td>
                            <td>@Html.DisplayFor(modelItem => item.SalesRetail)</td>
                            <td>@Html.DisplayFor(modelItem => item.SalesCost)</td>
                            <td>@Html.DisplayFor(modelItem => item.SalesVendorID)</td>
                            <td>@Html.DisplayFor(modelItem => item.SalesReorder)</td>
                            <td>@Html.DisplayFor(modelItem => item.SalesPercent)</td>
                            <td>@Html.DisplayFor(modelItem => item.SalesAppliedMargin)</td>
                            <td>@Html.DisplayFor(modelItem => item.SalesCTM)</td>
                        </tr>
                    }
                }
            </tbody>
            <tfoot>
                <tr>
                    <th style="text-align:center">Total:</th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </fieldset>
</div>

<br />

<div>
    <fieldset title="Report Totals">
        <table id="report totals" class="display text-nowrap" style="width:35%">
            <thead>
                <tr>
                    <th class="text-center" >Total Weight</th>
                    <th class="text-center" >Total Sales</th>
                    <th class="text-center" >Total Units</th>
                    <th class="text-center" >Total CTM</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td align="center" >@String.Format("{0}", ViewBag.TotalWeight)</td>
                    <td align="center" >@String.Format("{0:C}", ViewBag.TotalSales)</td>
                    <td align="center" >@String.Format("{0}", ViewBag.TotalUnits)</td>
                    <td align="center" >@String.Format("{0:P2}", ViewBag.TotalCTM)</td>
                </tr>
            </tbody>
        </table>
    </fieldset>
</div>

@section scripts{
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.5.4/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.flash.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.print.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/select/1.2.7/js/dataTables.select.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/responsive/1.0.7/js/dataTables.responsive.min.js"></script>
    <script src="~/Content/Editor-1.8.1/js/dataTables.editor.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.8.4/moment.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/plug-ins/1.10.19/sorting/datetime-moment.js"></script>

    @* Creates a useable javascript variable from razrview viewbag variable *@
    <script> var viewBagTotalAmount = @(ViewBag.TotalAmount); </script>

    <script type="text/javascript">
        var editor;

        $(document).ready(function () {
            editor = new $.fn.dataTable.Editor({
                table: "#results",
                idSrc: 'ItemCode',
                fields: [{
                    label: "Item Code:",
                    name: "ItemCode"
                }, {
                    label: "Brand:",
                    name: "ItemBrand"
                }, {
                    label: "Description:",
                    name: "ItemDescription"
                }, {
                    label: "Weight:",
                    name: "SalesWeight"
                }, {
                    label: "Quantity:",
                    name: "SalesQuantity"
                }, {
                    label: "Total Sales:",
                    name: "SalesAmount"
                }, {
                    label: "Retail:",
                    name: "SalesRetail",
                }, {
                    label: "Cost:",
                    name: "SalesCost"
                }, {
                    label: "Vendor ID:",
                    name: "SalesVendorID"
                }, {
                    label: "Reorder Code:",
                    name: "SalesReorder"
                }, {
                    label: "% of Sales:",
                    name: "SalesPercent"
                }, {
                    label: "Applied Margin:",
                    name: "SalesAppliedMargin"
                }, {
                    label: "CTM:",
                    name: "SalesCTM"
                }]
            });

            // Calculates new applied margin and CTM on retail change
            editor.field('SalesRetail').input().on('change', function () {
                editor.field('SalesRetail').val(editor.field('SalesRetail').val().replace("$", ""));
                editor.field('SalesAppliedMargin').val(((1 - (editor.field('SalesCost').val().replace(/[\$,]/g, '') / this.value)) * 100).toFixed(2) + '%');
                editor.field('SalesCTM').val((((editor.field('SalesAmount').val().replace(/[\$,]/g, '') - (editor.field('SalesQuantity').val().replace(/[\$,]/g, '') * editor.field('SalesCost').val().replace(/[\$,]/g, ''))) / viewBagTotalAmount) * 100).toFixed(2) + '%');
            });

            // Calculates new applied margin on cost change
            editor.field('SalesCost').input().on('change', function () {
                editor.field('SalesCost').val(editor.field('SalesCost').val().replace("$", ""));
                editor.field('SalesAppliedMargin').val(((1 - (this.value / editor.field('SalesRetail').val().replace(/[\$,]/g, ''))) * 100).toFixed(2) + '%');
                editor.field('SalesCTM').val((((editor.field('SalesAmount').val().replace(/[\$,]/g, '') - (editor.field('SalesQuantity').val().replace(/[\$,]/g, '') * editor.field('SalesCost').val().replace(/[\$,]/g, ''))) / viewBagTotalAmount) * 100).toFixed(2) + '%');
            });

            // Activate an inline edit on click of a table cell
            $('#results').on('click', 'tbody td.editable', function (e) {
                editor.inline(this);
            });

            $('#results').DataTable({
                responsive: true,

                // Default table lengths
                lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                columns: [
                    { data: "ItemCode", width: '110px' },
                    { data: "ItemBrand" },
                    { data: "ItemDescription" },
                    { data: "SalesWeight", width: '50px' },
                    { data: "SalesQuantity", width: '60px' },
                    { data: "SalesAmount", width: '80px' },
                    { data: "SalesRetail", className: 'editable', width: '60px', render: $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { data: "SalesCost", className: 'editable', width: '60px', render: $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { data: "SalesVendorID", className: 'editable', width: '60px' },
                    { data: "SalesReorder", className: 'editable', width: '60px' },
                    { data: "SalesPercent", width: '80px' },
                    { data: "SalesAppliedMargin", width: '110px' },
                    { data: "SalesCTM", width: '50px' }
                ],

                select: true,

                dom: '<"floatRight"B><"clear">lfrtip',
                buttons: [{
                    extend: 'collection',
                    text: 'Export',
                    autoClose: true,
                    buttons: [
                        {
                            extend: 'copy',
                            filename: 'CTM-"@startDate"-"@endDate"',
                            footer: true
                        },
                        {
                            extend: 'excelHtml5',
                            filename: 'CTM-"@startDate"-"@endDate"',
                            footer: true,
                            title: '',
                            customize: function (xlsx) {
                                var sheet = xlsx.xl.worksheets['sheet1.xml'];
                                var sheetStyle = xlsx.xl['styles.xml'];
                                var clR = $('row', sheet);
                                var lastXfIndex = $('cellXfs xf', sheetStyle).length - 1;
                                var lastFontIndex = $('fonts font', sheetStyle).length - 1;

                                var f12 = '<font><sz val="12" /><name val="Calibri" /></font>'
                                var f14 = '<font><sz val="14" /><name val="Calibri" /></font>'
                                var f18 = '<font><sz val="18" /><name val="Calibri" /></font>'
                                var xfFont12 = '<xf numFmtId="0" fontId="' + (lastFontIndex + 1) + '" fillId="0" borderId="0" applyFont="1" applyFill = "1" applyBorder = "1" xfId = "0" applyAlignment = "1"/>';
                                var xfFont14 = '<xf numFmtId="0" fontId="' + (lastFontIndex + 2) + '" fillId="0" borderId="0" applyFont="1" applyFill = "1" applyBorder = "1" xfId = "0" applyAlignment = "1"/>';
                                var xfFont18 = '<xf numFmtId="0" fontId="' + (lastFontIndex + 3) + '" fillId="0" borderId="0" applyFont="1" applyFill = "1" applyBorder = "1" xfId = "0" applyAlignment = "1"/>';

                                //define the style with the new font (number passed in as a variable) add the new font to the other fonts

                                sheetStyle.childNodes[0].childNodes[1].innerHTML += f12 + f14 + f18;
                                sheetStyle.childNodes[0].childNodes[5].innerHTML += xfFont12 + xfFont14 + xfFont18;

                                var font12 = lastXfIndex + 1;
                                var font14 = lastXfIndex + 2;
                                var font18 = lastXfIndex + 3;
                                                                
                                // Update cell size to 12
                                var tagName = sheetStyle.getElementsByTagName('sz');
                                tagName[5].setAttribute("val", "12")
                                tagName[6].setAttribute("val", "14")
                                tagName[7].setAttribute("val", "18")

                                // Update Row
                                var numrows = 4;
                                var clR = $('row', sheet);
                                clR.each(function () {
                                    var attr = $(this).attr('r');
                                    var ind = parseInt(attr);
                                    ind = ind + numrows;
                                    $(this).attr("r", ind);
                                });

                                // Create row before data
                                $('row c ', sheet).each(function () {
                                    var attr = $(this).attr('r');
                                    var pre = attr.substring(0, 1);
                                    var ind = parseInt(attr.substring(1, attr.length));
                                    ind = ind + numrows;
                                    $(this).attr("r", pre + ind);
                                });

                                function Addrow(index, data) {
                                    var msg = '<row r="' + index + '">'
                                    for (var i = 0; i < data.length; i++) {
                                        var key = data[i].key;
                                        var value = data[i].value;
                                        msg += '<c t="inlineStr" r="' + key + index + '">';
                                        msg += '<is>';
                                        msg += '<t>' + value + '</t>';
                                        msg += '</is>';
                                        msg += '</c>';
                                    }
                                    msg += '</row>';
                                    return msg;
                                }

                                // Insert
                                var r1 = Addrow(1, [{ key: 'A', value: 'Contribution to Margin by Sub-department: @(ViewBag.Store)' }]);
                                var r2 = Addrow(2, [{ key: 'A', value: '@(ViewBag.SdpCode) - @(ViewBag.SdpDesc)' }]);
                                var r3 = Addrow(3, [{ key: 'A', value: '@startDate   to   @endDate' }]);
                                
                                sheet.childNodes[0].childNodes[1].innerHTML = r1 + r2 + r3 + sheet.childNodes[0].childNodes[1].innerHTML;

                                $('row c[r="A1"]', sheet).attr('s', font18);
                                $('row c[r="A2"]', sheet).attr('s', font14);
                                $('row c[r="A3"]', sheet).attr('s', font12);
                            }
                        },
                        {
                            extend: 'csv',
                            filename: 'CTM-"@startDate"-"@endDate"',
                            footer: true
                        },
                        {
                            extend: 'pdf',
                            filename: 'CTM-"@startDate"-"@endDate"',
                            footer: true
                        },
                        {
                            extend: 'print',
                            filename: 'CTM-"@startDate"-"@endDate"',
                            footer: true
                        }
                    ]
                }],

                // Footer Totals
                "footerCallback": function (row, data, start, end, display) {

                    var api = this.api(), data;

                    // Remove the formatting to get integer data for summation
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[)\$,]/g, '').replace(/[(]/g, '-') * 1 :
                            typeof i === 'number' ?
                                i : 0;
                    };

                    // Remove formatting to get float data for summation
                    var decVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[)\$,]/g, '').replace(/[(]/g, '-') :
                            typeof i === 'number' ?
                                i : 0;
                    };

                    // Sum weight column
                    pageTotalWeight = api
                        .column(3, { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Update footer
                    $(api.column(3).footer()).html(pageTotalWeight.toFixed(3));

                    // Sum quantity column
                    pageTotalUnits = api
                        .column(4, { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Update footer
                    $(api.column(4).footer()).html(pageTotalUnits.toFixed(2));

                    // Sum sales column
                    pageTotalSales = api
                        .column(5, { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    // Update footer
                    $(api.column(5).footer()).html('$' + pageTotalSales.toFixed(2));

                    // Sum CTM column
                    pageTotalSales = api
                        .column(12, { page: 'current' })
                        .data()
                        .reduce(function (a, b) {
                            return parseFloat(decVal(a)) + parseFloat(decVal(b));
                        }, 0);

                    // Update footer
                    $(api.column(12).footer()).html(pageTotalSales.toFixed(2) + '%');
                }
            });
        });
    </script>
}