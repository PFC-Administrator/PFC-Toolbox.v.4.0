@{
    ViewBag.Title = "Product Maintenance";
}
@using PFC_Toolbox.v._4._0.Extensions;
@using PFC_Toolbox.v._4._0.Models;

<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />

    <title>Product Maintenance</title>

    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" />
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.5.4/css/buttons.dataTables.min.css" />
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/select/1.2.7/css/select.dataTables.min.css" />
    <link rel="stylesheet" type="text/css" href="https://editor.datatables.net/extensions/Editor/css/editor.dataTables.min.css" />
    <link rel="stylesheet" type="text/css" href="~/Content/Custom.css" />
</head>
<body class="dataTables">
    <div class="container">

        <h1><img src="~/Content/PFC_Logo_128px.png" width="100" height="100">        Product Updates</h1>

        <br />
        <table id="ProductMaintenance" class="display text-nowrap compact" style="width:100%">
            <thead>
                <tr>
                    <th>Request Type</th>
                    <th>Status</th>
                    <th>UPC/PLU</th>
                    <th>Brand</th>
                    <th>Description</th>
                    <th>Size</th>
                    <th>TPR Start</th>
                    <th>TPR End</th>
                    <th>TPR Price</th>
                    <th>Retail Price</th>
                    <th>Created By</th>
                    <th>Date Created</th>
                    <th>Location</th>
                </tr>
            </thead>
        </table>

    </div>
</body>
</html>

@section scripts{
    <script type="text/javascript" charset="utf-8" src=" https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.10/lodash.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.5.4/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.flash.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.print.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/select/1.2.7/js/dataTables.select.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/responsive/1.0.7/js/dataTables.responsive.min.js"></script>
    <script src="~/Content/Editor-1.8.1/js/dataTables.editor.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.8.4/moment.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/plug-ins/1.10.19/sorting/datetime-moment.js"></script>

    <script>

        // Function to pad numbers with 0's
        function pad(number, width = 3, z = 0) { return (String(z).repeat(width) + String(number)).slice(String(number).length) }

        var editorPR;
        var editor;
        $(document).ready(function () {

            $.fn.dataTable.moment( 'M/D/YYYY hh:mm:ss A' );

            // Promotion Report Form
            var editorPR = new $.fn.dataTable.Editor({
                ajax: '/api/ProductUpdates',
                table: '#ProductMaintenance',
                fields: [
                    {
                        label: "Product Update Type",
                        name: "ProductUpdates.requesttypeID",
                        type: "select",
                        placeholder: "Select a request type"
                    }, {
                        label: "Location:",
                        name: "ProductUpdates.locationID",
                        type: "select",
                        placeholder: "Select a location"
                    }, {
                        label: "TPR Start",
                        name: "ProductUpdates.promotprstartdate"
                    }, {
                        label: "TPR End",
                        name: "ProductUpdates.promotprenddate"
                    }
                ]
            });

            // Product Update Form
            var editor = new $.fn.dataTable.Editor({
                ajax: '/api/ProductUpdates',
                table: '#ProductMaintenance',
                fields: [
                    {
                        label: "Product Update Type",
                        name: "ProductUpdates.requesttypeID",
                        type: "select",
                        placeholder: "Select a request type"
                    }, {
                        label: "Location:",
                        name: "ProductUpdates.locationID",
                        type: "select",
                        placeholder: "Select a location"
                    }, {
                        label: "UPC/PLU",
                        name: "ProductUpdates.F01"
                    }, {
                        label: "Mettler Product:",
                        name: "ProductUpdates.ismettlerrequired",
                        type: "select",
                        options: ["Yes", "No"],
                        placeholder: "Select an option"
                    }, {
                        label: "Retail Price",
                        name: "ProductUpdates.price_tab_f30"
                    },{
                        label: "Vendor:",
                        name: "ProductUpdates.COST_TAB_F27",
                        type: "select",
                        placeholder: "Select a vendor"
                    }, {
                        label: "Reorder code:",
                        name: "ProductUpdates.COST_TAB_F26"
                    }, {
                        label: "Retail margin:",
                        name: "ProductUpdates.PRICE_TAB_F49"
                    }, {
                        label: "Items per case:",
                        name: "ProductUpdates.COST_TAB_F19"
                    }, {
                        label: "Case cost:",
                        name: "ProductUpdates.COST_TAB_F38"
                    }, {
                        label: "TPR Start",
                        name: "ProductUpdates.promotprstartdate"
                    }, {
                        label: "TPR End",
                        name: "ProductUpdates.promotprenddate"
                    }, {
                        label: "TPR Price",
                        name: "ProductUpdates.promotprprice"
                    }, {
                        label: "Shelf Tag:",
                        name: "ProductUpdates.labelID",
                        type: "select",
                        placeholder: "Select a label size"
                    }, {
                        label: "Sign:",
                        name: "ProductUpdates.signID",
                        type: "select",
                        placeholder: "Select a sign size"
                    }, {
                        label: "Brand:",
                        name: "ProductUpdates.OBJ_TAB_F155",
                        type: "select",
                        placeholder: "Select a brand"
                    }, {
                        label: "Receipt Description:",
                        name: "ProductUpdates.OBJ_TAB_F29"
                    }, {
                        label: "Size:",
                        name: "ProductUpdates.OBJ_TAB_F22"
                    }, {
                        label: "Sign Description:",
                        name: "ProductUpdates.OBJ_TAB_F255"
                    }, {
                        label: "Subdepartment:",
                        name: "ProductUpdates.POS_TAB_F04",
                        type: "select",
                        placeholder: "Select a subdepartment"
                    }, {
                        label: "Category:",
                        name: "ProductUpdates.OBJ_TAB_F17",
                        optionsPair: {
                            label: 'F1023',
                            value: 'F17'
                        },
                        type: "select",
                        placeholder: "Select a category"
                    }, {
                        label: "Report:",
                        name: "ProductUpdates.OBJ_TAB_F18",
                        type: "select",
                        placeholder: "Select a report"
                    }, {
                        label: "Family button:",
                        name: "ProductUpdates.OBJ_TAB_F16",
                        type: "select",
                        placeholder: "Select a family button"
                    }, {
                        label: "Like:",
                        name: "ProductUpdates.LIKE_TAB_F122",
                        type: "select",
                        placeholder: "Select a like code"
                    }, {
                        label: "SNAP:",
                        name: "ProductUpdates.POS_TAB_F79",
                        type: "checkbox",
                        options: [
                            { label: "", "value": "True" }
                        ],
                        separator: "|",
                        unselectedValue: "False"
                    }, {
                        label: "Scalable:",
                        name: "ProductUpdates.POS_TAB_F82",
                        type: "checkbox",
                        options: [
                            { label: "", "value": "True" }
                        ],
                        separator: "|",
                        unselectedValue: "False"
                    }, {
                        label: "Taxable:",
                        name: "ProductUpdates.POS_TAB_F81",
                        type: "checkbox",
                        options: [
                            { label: "", "value": "True" }
                        ],
                        separator: "|",
                        unselectedValue: "False"
                    }, {
                        label: "WIC:",
                        name: "ProductUpdates.POS_TAB_F178",
                        type: "checkbox",
                        options: [
                            { label: "", "value": "True" }
                        ],
                        separator: "|",
                        unselectedValue: "False"
                    }, {
                        label: "Created by:",
                        name: "ProductUpdates.createdby",
                        type: "readonly",
                        type: "hidden",
                        def: "@(User.GetCreatedBy())"
                    }, {
                        label: "Date created:",
                        name: "ProductUpdates.datecreated",
                        type: "hidden",
                        def: function () {
                            var today = new Date().getMonth() + 1
                                + "/" + new Date().getDate()
                                + "/" + new Date().getFullYear()
                                + " " + new Date().getHours()
                                + ":" + new Date().getMinutes()
                                + ":" + new Date().getSeconds(); return today }
                    },{
                        label: "Status:",
                        name: "ProductUpdates.productstatusID",
                        type: "hidden",
                        def: "3"
                    },{
                        label: "Notes:",
                        name: "ProductUpdates.AdditionalRequestNotes",
                        type:"textarea"
                    },{
                        label: "Mettler PLU:",
                        name: "ProductUpdates.ScalePLU"
                    },{
                        label: "Item Type:",
                        name: "ProductUpdates.ScaleItemTypeID",
                        type: "select",
                        placeholder: "Select an option",
                        options: [
                            { label: "Price per pound", value: "1" },
                            { label: "Standard pack", value: "2"}
                        ]
                    },{
                        label: "Tare / Net Weight:",
                        name: "ProductUpdates.TareNetWeight"
                    },{
                        label: "Shelf Life:",
                        name: "ProductUpdates.ShelfLife"
                    },{
                        label: "Ingredients:",
                        name: "ProductUpdates.IngredientList",
                        type:"textarea"
                    }
                ]
            });

            // Hides signs unless a promotional request type is selected on Product Update form
            editor.field('ProductUpdates.requesttypeID').input().on('change', function () {
                if (editor.field('ProductUpdates.requesttypeID').val() == '2' || editor.field('ProductUpdates.requesttypeID').val() == '3' || editor.field('ProductUpdates.requesttypeID').val() == '4' || editor.field('ProductUpdates.requesttypeID').val() == '5' || editor.field('ProductUpdates.requesttypeID').val() == '7' || editor.field('ProductUpdates.requesttypeID').val() == '8' || editor.field('ProductUpdates.requesttypeID').val() == '9')
                {
                    editor.field('ProductUpdates.signID').show();
                }
                else
                {
                    editor.field('ProductUpdates.signID').hide();
                }
            });

            // Hides TPR fields unless a promotional request type is selected on Product Update form
            editor.field('ProductUpdates.requesttypeID').input().on('change', function () {
                if (editor.field('ProductUpdates.requesttypeID').val() == '2' || editor.field('ProductUpdates.requesttypeID').val() == '3' || editor.field('ProductUpdates.requesttypeID').val() == '4' || editor.field('ProductUpdates.requesttypeID').val() == '5' || editor.field('ProductUpdates.requesttypeID').val() == '7' || editor.field('ProductUpdates.requesttypeID').val() == '8' || editor.field('ProductUpdates.requesttypeID').val() == '9')
                {
                    editor.field('ProductUpdates.promotprstartdate').show();
                }
                else
                {
                    editor.field('ProductUpdates.promotprstartdate').hide();
                }
            });

            // Hides TPR fields unless a promotional request type is selected on Product Update form
            editor.field('ProductUpdates.requesttypeID').input().on('change', function () {
                if (editor.field('ProductUpdates.requesttypeID').val() == '2' || editor.field('ProductUpdates.requesttypeID').val() == '3' || editor.field('ProductUpdates.requesttypeID').val() == '4' || editor.field('ProductUpdates.requesttypeID').val() == '5' || editor.field('ProductUpdates.requesttypeID').val() == '7' || editor.field('ProductUpdates.requesttypeID').val() == '8' || editor.field('ProductUpdates.requesttypeID').val() == '9')
                {
                    editor.field('ProductUpdates.promotprenddate').show();
                }
                else
                {
                    editor.field('ProductUpdates.promotprenddate').hide();
                }
            });

            // Hides TPR fields unless a promotional request type is selected on Product Update form
            editor.field('ProductUpdates.requesttypeID').input().on('change', function () {
                if (editor.field('ProductUpdates.requesttypeID').val() == '2' || editor.field('ProductUpdates.requesttypeID').val() == '3' || editor.field('ProductUpdates.requesttypeID').val() == '4' || editor.field('ProductUpdates.requesttypeID').val() == '5' || editor.field('ProductUpdates.requesttypeID').val() == '7' || editor.field('ProductUpdates.requesttypeID').val() == '8' || editor.field('ProductUpdates.requesttypeID').val() == '9')
                {
                    editor.field('ProductUpdates.promotprprice').show();
                }
                else
                {
                    editor.field('ProductUpdates.promotprprice').hide();
                }
            });

            // Hides Family Button unless Hackberry's item is selected on Product Update form
            editor.field('ProductUpdates.requesttypeID').input().on('change', function () {
                if (editor.field('ProductUpdates.requesttypeID').val() == '10')
                {
                    editor.field('ProductUpdates.OBJ_TAB_F16').show();
                }
                else
                {
                    editor.field('ProductUpdates.OBJ_TAB_F16').hide();
                }
            });
            
            // Hides Like code unless Produce is selected on Product Update form
            editor.field('ProductUpdates.POS_TAB_F04').input().on('change', function () {
                if (editor.field('ProductUpdates.POS_TAB_F04').val() == '6' || editor.field('ProductUpdates.POS_TAB_F04').val() == '17' || editor.field('ProductUpdates.POS_TAB_F04').val() == '3')
                {
                    editor.field('ProductUpdates.LIKE_TAB_F122').show();
                }
                else
                {
                    editor.field('ProductUpdates.LIKE_TAB_F122').hide();
                }
            });

            // Hides Mettler Ingredients unless Yes to Mettler Product option is select on Product Update form
            editor.field('ProductUpdates.ismettlerrequired').input().on('change', function () {
                if (editor.field('ProductUpdates.ismettlerrequired').val() == 'Yes')
                {

                    editor.field('ProductUpdates.ScalePLU').show();
                    editor.field('ProductUpdates.ScaleItemTypeID').show();
                    editor.field('ProductUpdates.TareNetWeight').show();
                    editor.field('ProductUpdates.ShelfLife').show();
                    editor.field('ProductUpdates.IngredientList').show();
                }
                else
                {
                    editor.field('ProductUpdates.ScalePLU').hide();
                    editor.field('ProductUpdates.ScaleItemTypeID').hide();
                    editor.field('ProductUpdates.TareNetWeight').hide();
                    editor.field('ProductUpdates.ShelfLife').hide();
                    editor.field('ProductUpdates.IngredientList').hide();
                }
            });

            // Cascading select fields on Product Update form
            editor.dependent('ProductUpdates.POS_TAB_F04', '/api/Categories');

            // Hides cost info on load on Product Update form
            editor.field('ProductUpdates.POS_TAB_F04').input().on('change', function ()
            {
                    editor.field('ProductUpdates.COST_TAB_F27').hide();
                    editor.field('ProductUpdates.COST_TAB_F26').hide();
                    editor.field('ProductUpdates.PRICE_TAB_F49').hide();
                    editor.field('ProductUpdates.COST_TAB_F19').hide();
                    editor.field('ProductUpdates.COST_TAB_F38').hide();

            });

            var costCounter = 0;
            // Display cost info when cost button is clicked on Product Update form
            $(document).on('click', '#cost', function () {
                if (costCounter == 0)
                {
                    editor.field('ProductUpdates.COST_TAB_F27').show();
                    editor.field('ProductUpdates.COST_TAB_F26').show();
                    editor.field('ProductUpdates.PRICE_TAB_F49').show();
                    editor.field('ProductUpdates.COST_TAB_F19').show();
                    editor.field('ProductUpdates.COST_TAB_F38').show();
                    costCounter = 1
                    //alert(costCounter);
                }
                else
                {
                    editor.field('ProductUpdates.COST_TAB_F27').hide();
                    editor.field('ProductUpdates.COST_TAB_F26').hide();
                    editor.field('ProductUpdates.PRICE_TAB_F49').hide();
                    editor.field('ProductUpdates.COST_TAB_F19').hide();
                    editor.field('ProductUpdates.COST_TAB_F38').hide();
                    costCounter = 0
                    //alert(costCounter);
                }
            });

            var srpCounter = 0;
            // Display SRP calculator info when cost button is clicked on Product Update form
            $(document).on('click', '#srpcalculator', function () {
                if (srpCounter == 0)
                {
                    editor.field('ProductUpdates.COST_TAB_F19').show();
                    editor.field('ProductUpdates.COST_TAB_F38').show();
                    editor.field('ProductUpdates.PRICE_TAB_F49').show();
                    srpCounter = 1
                    //alert(srpCounter);
                }
                else
                {
                    editor.field('ProductUpdates.COST_TAB_F19').hide();
                    editor.field('ProductUpdates.COST_TAB_F38').hide();
                    editor.field('ProductUpdates.PRICE_TAB_F49').hide();
                    srpCounter = 0
                    //alert(srpCounter);
                }
            });

            // SRP Calculator on Product Update form
            $(document).on('click', '#calculate', function () {
                var srp;

                if (editor.field('ProductUpdates.PRICE_TAB_F49').val() == null || editor.field('ProductUpdates.PRICE_TAB_F49').val() == "")
                {
                    alert('Please enter the target margin.');
                }
                else
                {
                    var targetMargin = editor.field('ProductUpdates.PRICE_TAB_F49').val();

                    if (editor.field('ProductUpdates.COST_TAB_F19').val() == null || editor.field('ProductUpdates.COST_TAB_F19').val() == "")
                    {
                        alert('Please enter the number of items per case or a 1.');
                    }
                    else
                    {
                        var itemsPerCase = editor.field('ProductUpdates.COST_TAB_F19').val();

                        if (editor.field('ProductUpdates.COST_TAB_F38').val() == null || editor.field('ProductUpdates.COST_TAB_F38').val() == "")
                        {
                            alert('Please enter a cost per case.');
                        }
                        else
                        {
                            var costPerCase = editor.field('ProductUpdates.COST_TAB_F38').val();

                            srp = ( ( Math.round( ( ( costPerCase / itemsPerCase ) / ( 1 - ( targetMargin / 100 ) ) ) * 10 ) / 10 ) - .01 );

                            editor.field('ProductUpdates.price_tab_f30').val( srp )
                        }
                    }
                }
            });
           
            var table = $('#ProductMaintenance').DataTable({
                // This is the default view showing uncompleted requests
                initComplete: function (e, dt, node, config) {
                    table.column(0).search('^((?!(New Product)).)*$', true, false)
                         .column(1).search('^((?!(4 - Completed)).)*$', true, false).draw()
                },
                //processing: true,
                //serverSide: true,
                //paging: true,
                deferRender: true,
                "lengthMenu": [[20, 50, 100, -1], [20, 50, 100, "All"]],
                ajax: {
                    url: '/api/ProductUpdates'
                },
                columns: [
                    { "data": "RequestTypes.requestname" },
                    { "data": "Status.productupdatestatus" },
                    { "data": "ProductUpdates.F01" },
                    { "data": "ProductUpdates.OBJ_TAB_F155" },
                    { "data": "ProductUpdates.OBJ_TAB_F29", width: '110px'},
                    { "data": "ProductUpdates.OBJ_TAB_F22" },
                    { "data": "ProductUpdates.promotprstartdate" },
                    { "data": "ProductUpdates.promotprenddate" },
                    { "data": "ProductUpdates.promotprprice" },
                    { "data": "ProductUpdates.price_tab_f30" },
                    { "data": "ProductUpdates.createdby" },
                    {
                        "data": "ProductUpdates.datecreated", "render": function (value) {
                            if (value === null) return "";
                            return window.moment(value).format('M/D/YYYY hh:mm:ss A');
                        }
                    },
                    { "data": "ProductUpdates.locationID", visible: false }
                ],
                "rowCallback": function (row, data, index) {
                    if (data.RequestTypes.requestname == "New Product") { $(row).find('td:eq(0)').css('background-color', '#E6EDD7'); }
                },
                select: true,
                dom: '<"floatRight"B><"clear">lfrtip',
                order: [[11, "desc"], [1, "asc"]],
                buttons: [
                    { text: 'Promotion Report', title: 'Update An Existing Product', extend: 'create', editor: editorPR,
                        formButtons:
                            [{
                                text: 'Run Report',
                                action: function (e, dt, node, config) {
                                    // Hides signs unless a promotional request type is selected on Product Update form
                                    switch ( editorPR.field('ProductUpdates.requesttypeID').val() )
                                    {
                                        case 1:
                                            var promo = "Product Info Update";
                                            break;
                                        case 2:
                                            var promo = "Happy Hour";
                                            break;
                                        case 3:
                                            var promo = "Member Specials";
                                            break;
                                        case 4:
                                            var promo = "PFC Fresh Deals";
                                            break;
                                        case 5:
                                            var promo = "Ad Hoc Promo";
                                            break;
                                        case 6:
                                            var promo = "New Product";
                                            break;
                                        case 7:
                                            var promo = "Co-op Deals Correction";
                                            break;
                                        case 8:
                                            var promo = "Flash Sale";
                                            break;
                                        case 9:
                                            var promo = "NCG Fresh Deals";
                                            break;
                                        case 10:
                                            var promo = "Hackberry's Menu Item";
                                            break;
                                    };

                                    var locale = editorPR.field('ProductUpdates.locationID').val()
                                    var startDate = editorPR.field('ProductUpdates.promotprstartdate').val();
                                    var endDate = editorPR.field('ProductUpdates.promotprenddate').val();

                                    table.column(0).search('^' + promo + '$', true, false)
                                         .column(6).search('^' + startDate + '$', true, false)
                                         .column(7).search('^' + endDate + '$', true, false)
                                         .column(12).search('^' + locale + '$', true, false).draw()
                                    this.close();
                                }
                            }]

                    },
                    { text: 'Edit', extend:'edit', editor:editor},
                    { text: 'Show Completed Today', action: function (e, dt, node, config) { table.column(1).search('^4 - Completed$', true, false).draw() } },
                    {
                        text: 'Show Default View', action: function (e, dt, node, config) {
                            table.column(0).search('', true, false)
                                 .column(6).search('', true, false)
                                 .column(7).search('', true, false)
                                 .column(12).search('', true, false)
                                 .column(0).search('^((?!(New Product)).)*$', true, false)
                                 .column(1).search('^((?!(4 - Completed)).)*$', true, false).draw();
                        }
                    },
                    {
                        text: 'Show All', action: function (e, dt, node, config) {
                            table.column(1).search('3 - Manager Review Completed$|^4 - Completed$', true, false)
                                 .column(11).order('desc').draw()
                        }
                    },
                    {
                        extend: 'collection', text: 'Export', autoClose: true,
                        buttons: [
                            'copy',
                            'excel',
                            'csv',
                            'pdf',
                            'print'
                        ]
                    },
                    { text: 'Back', action: function () { window.location = 'ProductMaintenance' } }
                ]
            });

            // Update An Existing Product Form buttons
            $('<button id="cost" style="position:absolute;top:20%;right:12.5%">Cost</button>').insertAfter(
                editor.field('ProductUpdates.price_tab_f30').input()
            );

            $('<button id="srpcalculator" style="position:absolute;top:20%;right:5%">SRP</button>').insertAfter(
                editor.field('ProductUpdates.price_tab_f30').input()
            );

            $('<button id="calculate" style="position:absolute;top:20%;right:8%">Calculate</button>').insertAfter(
                editor.field('ProductUpdates.COST_TAB_F38').input()
            );
        });
    </script>
}