@{
    ViewBag.Title = "Product Maintenance";
    var CreatedBy = Request["CreatedBy"];
}

<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />

    <title>Product Maintenance</title>

    <link rel="stylesheet" type="text/css" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css" />
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.6.1/css/buttons.dataTables.min.css" />
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/select/1.3.1/css/select.dataTables.min.css" />
    <link rel="stylesheet" type="text/css" href="https://editor.datatables.net/extensions/Editor/css/editor.dataTables.min.css" />
</head>
<body class="dataTables">
    <div class="productUpdatesContainer">
        <h1><img src="~/Content/PFC_Logo_128px.png" width="100" height="100">        Product Updates</h1>
        <br />
        <table id="ProductUpdates" class="display text-nowrap compact" style="width:100%">
            <thead>
                <tr>
                    <th>Request Type</th>
                    <th></th>
                    <th>Status</th>
                    <th>Item Code</th>
                    <th>Brand</th>
                    <th>Description</th>
                    <th>Size</th>
                    <th>TPR Start</th>
                    <th>TPR End</th>
                    <th>TPR Price</th>
                    <th>Retail Price</th>
                    <th>Created By</th>
                    <th>Date Created</th>
                </tr>
            </thead>
        </table>
    </div>
</body>
</html>

@section scripts{
    <script type="text/javascript" charset="utf-8" src="https://code.jquery.com/jquery-3.3.1.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.6.1/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.flash.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.print.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/select/1.3.1/js/dataTables.select.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/responsive/1.0.7/js/dataTables.responsive.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.8.4/moment.min.js"></script>
    <script type="text/javascript" charset="utf-8" src="https://cdn.datatables.net/plug-ins/1.10.19/sorting/datetime-moment.js"></script>

    <script>

        // Reference ~/Content/Functions.js for custom functions

        var currentUser = "@CreatedBy";
        var editorPR;
        var editor;
        $(document).ready(function () {

            $.fn.dataTable.moment('M/D/YYYY h:mm:ss A');

            // Disable autocomplete on form fields
            $.extend(true, $.fn.dataTable.Editor.Field.defaults, {
                attr: {
                    autocomplete: 'off'
                }
            });

            // Promotion Report Form
            var editorPR = new $.fn.dataTable.Editor({
                ajax: '/api/ProductUpdates',
                table: '#ProductUpdates',
                fields: [
                    {
                        label: "Product Update Type",
                        name: "ProductUpdates.requesttypeID",
                        type: "select",
                        placeholder: "Select a request type"
                    }, {
                        label: "Location:",
                        name: "ProductUpdates.locationID",
                        type: "select",
                        placeholder: "Select a location"
                    }, {
                        label: "TPR Start",
                        name: "ProductUpdates.promotprstartdate",
                        type: "datetime",
                        format: "M/D/YYYY"
                    }, {
                        label: "TPR End",
                        name: "ProductUpdates.promotprenddate",
                        type: "datetime",
                        format: "M/D/YYYY"
                    }
                ]
            });


            /***********************************************************************************************************************/


            // Update An Existing Product Form
            var editor = new $.fn.dataTable.Editor({
                ajax: '/api/ProductUpdates',
                table: '#ProductUpdates',
                fields: [
                    {
                        label: "Status:",
                        name: "ProductUpdates.productstatusID",
                        type: "select",
                        def: "3"
                    }, {
                        label: "Product Update Type",
                        name: "ProductUpdates.requesttypeID",
                        type: "select",
                        placeholder: "Select a request type"
                    }, {
                        label: "Location:",
                        name: "ProductUpdates.locationID",
                        type: "select",
                        placeholder: "Select a location"
                    }, {
                        label: "Mettler Product:",
                        name: "ProductUpdates.ismettlerrequired",
                        type: "select",
                        options: ["Yes", "No"],
                        placeholder: "Select an option"
                    }, {
                        label: "Shelf Tag:",
                        name: "ProductUpdates.labelID",
                        type: "select",
                        placeholder: "Select a label size"
                    }, {
                        label: "UPC/PLU",
                        name: "ProductUpdates.F01"
                    }, {
                        label: "Mettler PLU:",
                        name: "ProductUpdates.ScalePLU"
                    }, {
                        label: "Vendor:",
                        name: "ProductUpdates.COST_TAB_F27",
                        type: "select",
                        placeholder: "Select a vendor"
                    }, {
                        label: "Reorder code:",
                        name: "ProductUpdates.COST_TAB_F26"
                    }, {
                        label: "Retail margin:",
                        name: "ProductUpdates.PRICE_TAB_F49"
                    }, {
                        label: "Items per case:",
                        name: "ProductUpdates.COST_TAB_F19"
                    }, {
                        label: "Case cost:",
                        name: "ProductUpdates.COST_TAB_F38"
                    }, {
                        label: "Retail Price",
                        name: "ProductUpdates.price_tab_f30"
                    }, {
                        label: "TPR Start",
                        name: "ProductUpdates.promotprstartdate",
                        type: "datetime",
                        format: "M/DD/YYYY"
                    }, {
                        label: "TPR End",
                        name: "ProductUpdates.promotprenddate",
                        type: "datetime",
                        format: "M/DD/YYYY"
                    }, {
                        label: "TPR Price",
                        name: "ProductUpdates.promotprprice"
                    }, {
                        label: "Sign:",
                        name: "ProductUpdates.signID",
                        type: "select",
                        placeholder: "Select a sign size"
                    }, {
                        label: "Brand:",
                        name: "ProductUpdates.OBJ_TAB_F155",
                        type: "select",
                        placeholder: "Select a brand",
                        id: "brandPU"
                    }, {
                        label: "Receipt Description:",
                        name: "ProductUpdates.OBJ_TAB_F29"
                    }, {
                        label: "Size:",
                        name: "ProductUpdates.OBJ_TAB_F22"
                    }, {
                        label: "Sign Description:",
                        name: "ProductUpdates.OBJ_TAB_F255"
                    }, {
                        label: "Subdepartment:",
                        name: "ProductUpdates.POS_TAB_F04",
                        type: "select",
                        placeholder: "Select a subdepartment",
                        id: "subdepartmentPU"
                    }, {
                        label: "Category:",
                        name: "ProductUpdates.OBJ_TAB_F17",
                        optionsPair: {
                            label: 'F1023',
                            value: 'F17'
                        },
                        type: "select",
                        placeholder: "Select a category",
                        id: "categoryPU"
                    }, {
                        label: "Report:",
                        name: "ProductUpdates.OBJ_TAB_F18",
                        type: "select",
                        placeholder: "Select a report",
                        id: "reportPU"
                    }, {
                        label: "Family button:",
                        name: "ProductUpdates.OBJ_TAB_F16",
                        type: "select",
                        placeholder: "Select a family button",
                        id: "familyPU"
                    }, {
                        label: "Like:",
                        name: "ProductUpdates.LIKE_TAB_F122",
                        type: "select",
                        placeholder: "Select a like code",
                        id: "likePU"
                    }, {
                        label: "SNAP:",
                        name: "ProductUpdates.POS_TAB_F79",
                        type: "checkbox",
                        options: [
                            { label: "", "value": 1 }
                        ],
                        separator: "|",
                        unselectedValue: 0
                    }, {
                        label: "Scalable:",
                        name: "ProductUpdates.POS_TAB_F82",
                        type: "checkbox",
                        options: [
                            { label: "", "value": 1 }
                        ],
                        separator: "|",
                        unselectedValue: 0
                    }, {
                        label: "Taxable:",
                        name: "ProductUpdates.POS_TAB_F81",
                        type: "checkbox",
                        options: [
                            { label: "", "value": 1 }
                        ],
                        separator: "|",
                        unselectedValue: 0
                    }, {
                        label: "Taxable 2:",
                        name: "ProductUpdates.POS_TAB_F96",
                        options: [
                            { label: "", "value": 1 }
                        ],
                        type: "checkbox",
                        type: "hidden",
                        unselectedValue: 0,
                        separator: "|"
                    }, {
                        label: "Stop discount:",
                        name: "ProductUpdates.POS_TAB_F150",
                        type: "checkbox",
                        options: [
                            { label: "", "value": 1 }
                        ],
                        separator: "|",
                        unselectedValue: 0,
                        type: "hidden"
                    }, {
                        label: "Force price:",
                        name: "ProductUpdates.POS_TAB_F83",
                        type: "checkbox",
                        options: [
                            { label: "", "value": 1 }
                        ],
                        separator: "|",
                        unselectedValue: 0,
                        type: "hidden"
                    }, {
                        label: "WIC:",
                        name: "ProductUpdates.POS_TAB_F178",
                        type: "checkbox",
                        options: [
                            { label: "", "value": 1 }
                        ],
                        separator: "|",
                        unselectedValue: 0
                    }, {
                        label: "Client age:",
                        name: "ProductUpdates.POS_TAB_F171",
                        type: "hidden"
                    }, {
                        label: "Notes:",
                        name: "ProductUpdates.AdditionalRequestNotes",
                        type:"textarea"
                    }, {
                        label: "Item Type:",
                        name: "ProductUpdates.ScaleItemTypeID",
                        type: "select",
                        placeholder: "Select an option",
                        options: [
                            { label: "Price per pound", value: "1" },
                            { label: "Standard pack", value: "2"}
                        ]
                    }, {
                        label: "Tare / Net Weight:",
                        name: "ProductUpdates.TareNetWeight"
                    }, {
                        label: "Shelf Life:",
                        name: "ProductUpdates.ShelfLife"
                    }, {
                        label: "Ingredients:",
                        name: "ProductUpdates.IngredientList",
                        type:"textarea"
                    }, {
                        label: "Created by:",
                        name: "ProductUpdates.createdby",
                        type: "readonly",
                        type: "hidden",
                        def: currentUser
                    }, {
                        label: "Date created:",
                        name: "ProductUpdates.datecreated",
                        type: "hidden",
                        def: getDate()
                    }, {
                        label: "Date completed:",
                        name: "ProductUpdates.completeddate"
                    }, {
                        label: "Completed by:",
                        name: "ProductUpdates.completedby"
                    }, {
                        label: "Last updated on:",
                        name: "ProductUpdates.lastupdatedon",
                        type: "hidden"
                    }, {
                        label: "Last updated by:",
                        name: "ProductUpdates.lastupdatedby",
                        type: "hidden"
                    }
                ]
            });

            // Update An Existing Product Form: converts receipt description to title case
            editor.field('ProductUpdates.OBJ_TAB_F29').input().on('blur', function () {
                var productName = editor.field('ProductUpdates.OBJ_TAB_F29').val();
                    productName = titleCase(productName);
                    productName = limitLength(productName, 32)
                editor.field('ProductUpdates.OBJ_TAB_F29').val(productName);
            });

            // Update An Existing Product Form: format size field
            editor.field('ProductUpdates.OBJ_TAB_F22').input().on('blur', function () {
                var size = editor.field('ProductUpdates.OBJ_TAB_F22').val();
                    size = sizeFormatter(size);
                    size = limitLength(size, 10)
                editor.field('ProductUpdates.OBJ_TAB_F22').val(size);
            });

            // Update An Existing Product Form: converts signage descriptions to title case
            editor.field('ProductUpdates.OBJ_TAB_F255').input().on('blur', function () {
                var productName = editor.field('ProductUpdates.OBJ_TAB_F255').val();
                    productName = titleCase(productName);
                    productName = limitLength(productName, 64)
                editor.field('ProductUpdates.OBJ_TAB_F255').val(productName);
            });

            // Update An Existing Product Form: shows completed by info if product is marked as complete
            editor.on('open', function () {
                if (editor.field('ProductUpdates.productstatusID').val() == 4) {
                    editor.field('ProductUpdates.completeddate').show();
                    editor.field('ProductUpdates.completedby').show();
                }
                else {
                    editor.field('ProductUpdates.completeddate').hide();
                    editor.field('ProductUpdates.completedby').hide();
                }
            });

            // Update An Existing Product Form: hides cost info on load
            editor.field('ProductUpdates.POS_TAB_F04').input().on('change', function () {
                editor.field('ProductUpdates.COST_TAB_F27').hide();
                editor.field('ProductUpdates.COST_TAB_F26').hide();
                editor.field('ProductUpdates.PRICE_TAB_F49').hide();
                editor.field('ProductUpdates.COST_TAB_F19').hide();

                // Hide calculate button
                document.getElementById('calculate').style.visibility = 'hidden';
            });

            // Update An Existing Product Form: hides TPR related fields unless a promotional request type is selected
            editor.field('ProductUpdates.requesttypeID').input().on('change', function () {
                if (editor.field('ProductUpdates.requesttypeID').val() == '2' || editor.field('ProductUpdates.requesttypeID').val() == '3' || editor.field('ProductUpdates.requesttypeID').val() == '4' || editor.field('ProductUpdates.requesttypeID').val() == '5' || editor.field('ProductUpdates.requesttypeID').val() == '7' || editor.field('ProductUpdates.requesttypeID').val() == '8' || editor.field('ProductUpdates.requesttypeID').val() == '9') {
                    editor.field('ProductUpdates.signID').show();
                    editor.field('ProductUpdates.promotprstartdate').show();
                    editor.field('ProductUpdates.promotprenddate').show();
                    editor.field('ProductUpdates.promotprprice').show();
                } else {
                    editor.field('ProductUpdates.signID').hide();
                    editor.field('ProductUpdates.promotprstartdate').hide();
                    editor.field('ProductUpdates.promotprenddate').hide();
                    editor.field('ProductUpdates.promotprprice').hide();
                }
            });

            // Update An Existing Product Form: hides Family Button unless Hackberry's Brand is selected
            editor.field('ProductUpdates.requesttypeID').input().on('change', function () {
                if (editor.field('ProductUpdates.requesttypeID').val() == '10') {
                    editor.field('ProductUpdates.OBJ_TAB_F16').show();
                } else {
                    editor.field('ProductUpdates.OBJ_TAB_F16').hide();
                }
            });

            // Update An Existing Product Form: hides Like code unless Produce is selected
            editor.field('ProductUpdates.POS_TAB_F04').input().on('change', function () {
                if (editor.field('ProductUpdates.POS_TAB_F04').val() == '6' || editor.field('ProductUpdates.POS_TAB_F04').val() == '17' || editor.field('ProductUpdates.POS_TAB_F04').val() == '3') {
                    editor.field('ProductUpdates.LIKE_TAB_F122').show();
                } else {
                    editor.field('ProductUpdates.LIKE_TAB_F122').hide();
                }
            });

            // Update An Existing Product Form: hides Mettler Ingredients unless Yes to Mettler Product option is selected
            editor.field('ProductUpdates.ismettlerrequired').input().on('change', function () {
                if (editor.field('ProductUpdates.ismettlerrequired').val() == 'Yes') {

                    editor.field('ProductUpdates.ScalePLU').show();
                    editor.field('ProductUpdates.ScaleItemTypeID').show();
                    editor.field('ProductUpdates.TareNetWeight').show();
                    editor.field('ProductUpdates.ShelfLife').show();
                    editor.field('ProductUpdates.IngredientList').show();
                } else {
                    editor.field('ProductUpdates.ScalePLU').hide();
                    editor.field('ProductUpdates.ScaleItemTypeID').hide();
                    editor.field('ProductUpdates.TareNetWeight').hide();
                    editor.field('ProductUpdates.ShelfLife').hide();
                    editor.field('ProductUpdates.IngredientList').hide();
                }
            });

            // Update An Existing Product Form: set scalable checkbox on Item Type selection.
            editor.field('ProductUpdates.ScaleItemTypeID').input().on('change', function () {
                if (editor.field('ProductUpdates.ScaleItemTypeID').val() == '1') {
                    editor.field('ProductUpdates.POS_TAB_F82').val(1);
                    editor.field('ProductUpdates.OBJ_TAB_F22').val("per lb.")
                } else {
                    editor.field('ProductUpdates.POS_TAB_F82').val(2);
                }
            });

            // Update An Existing Product Form: filter available categories on subdepartment selection
            editor.dependent('ProductUpdates.POS_TAB_F04', '/api/Categories');

            // Update An Existing Product Form: set default POS attributes
            editor.dependent('ProductUpdates.POS_TAB_F04', function () {
                var subdepartment = editor.field('ProductUpdates.POS_TAB_F04').val();

                var GetSubdepartmentAttributes = $.ajax({
                    url: "api/GetSubdepartmentBounds",
                    type: "GET",
                    dataType: "json",
                    data: { 'F04': subdepartment },
                    error: function (error) {
                        console.log(`Error ${error}`);
                    }
                });

                GetSubdepartmentAttributes.then(function (data) {
                    editor.field('ProductUpdates.POS_TAB_F79').val(data.data[0].SMSSubdepartments.F79);
                    editor.field('ProductUpdates.POS_TAB_F178').val(data.data[0].SMSSubdepartments.F178);
                    editor.field('ProductUpdates.POS_TAB_F81').val(data.data[0].SMSSubdepartments.F81);
                    editor.field('ProductUpdates.POS_TAB_F171').val(data.data[0].SMSSubdepartments.F171);
                    editor.field('ProductUpdates.POS_TAB_F150').val(data.data[0].SMSSubdepartments.F150);
                });
            });

            // Update An Existing Product Form: display cost info when cost button is clicked
            var costCounter = 0;
            $(document).on('click', '#cost', function () {
                if (costCounter == 0) {
                    editor.field('ProductUpdates.COST_TAB_F27').show();
                    editor.field('ProductUpdates.COST_TAB_F26').show();
                    editor.field('ProductUpdates.PRICE_TAB_F49').show();
                    editor.field('ProductUpdates.COST_TAB_F19').show();
                    editor.field('ProductUpdates.COST_TAB_F38').show();

                    // Show calculate button
                    document.getElementById('calculate').style.visibility = 'visible';

                    costCounter = 1
                } else {
                    editor.field('ProductUpdates.COST_TAB_F27').hide();
                    editor.field('ProductUpdates.COST_TAB_F26').hide();
                    editor.field('ProductUpdates.PRICE_TAB_F49').hide();
                    editor.field('ProductUpdates.COST_TAB_F19').hide();
                    editor.field('ProductUpdates.COST_TAB_F38').hide();

                    // Hide calculate button
                    document.getElementById('calculate').style.visibility = 'hidden';

                    costCounter = 0
                }
            });

            // Update An Existing Product Form: display SRP calculator info when cost button is clicked
            var srpCounter = 0;
            $(document).on('click', '#srpcalculator', function () {
                if (srpCounter == 0) {
                    editor.field('ProductUpdates.COST_TAB_F19').show();
                    editor.field('ProductUpdates.COST_TAB_F38').show();
                    editor.field('ProductUpdates.PRICE_TAB_F49').show();

                    // Show calculate button
                    document.getElementById('calculate').style.visibility = 'visible';

                    srpCounter = 1
                } else {
                    editor.field('ProductUpdates.COST_TAB_F19').hide();
                    editor.field('ProductUpdates.COST_TAB_F38').hide();
                    editor.field('ProductUpdates.PRICE_TAB_F49').hide();

                    // Hide calculate button
                    document.getElementById('calculate').style.visibility = 'hidden';

                    srpCounter = 0
                }
            });

            // Update An Existing Product Form: SRP Calculator
            $(document).on('click', '#calculate', function () {
                var srp;

                if (editor.field('ProductUpdates.PRICE_TAB_F49').val() == null || editor.field('ProductUpdates.PRICE_TAB_F49').val() == "")
                {
                    alert('Please enter the target margin.');
                }
                else
                {
                    var targetMargin = editor.field('ProductUpdates.PRICE_TAB_F49').val();

                    if (editor.field('ProductUpdates.COST_TAB_F19').val() == null || editor.field('ProductUpdates.COST_TAB_F19').val() == "")
                    {
                        alert('Please enter the number of items per case or a 1.');
                    }
                    else
                    {
                        var itemsPerCase = editor.field('ProductUpdates.COST_TAB_F19').val();

                        if (editor.field('ProductUpdates.COST_TAB_F38').val() == null || editor.field('ProductUpdates.COST_TAB_F38').val() == "")
                        {
                            alert('Please enter a cost per case.');
                        }
                        else
                        {
                            var costPerCase = editor.field('ProductUpdates.COST_TAB_F38').val();

                            srp = ( ( Math.round( ( ( costPerCase / itemsPerCase ) / ( 1 - ( targetMargin / 100 ) ) ) * 10 ) / 10 ) - .01 );

                            editor.field('ProductUpdates.price_tab_f30').val( srp )
                        }
                    }
                }
            });

            // Update An Existing Product Form: Cost button
            $('<button id="cost" style="position:absolute;top:20%;right:12.5%">Cost</button>').insertAfter(
                editor.field('ProductUpdates.price_tab_f30').input()
            );

            // Update An Existing Product Form: SRP button
            $('<button id="srpcalculator" style="position:absolute;top:20%;right:5%">SRP</button>').insertAfter(
                editor.field('ProductUpdates.price_tab_f30').input()
            );

            // Update An Existing Product Form: Calculate button
            $('<button id="calculate" style="position:absolute;top:20%;right:8%">Calculate</button>').insertAfter(
                editor.field('ProductUpdates.COST_TAB_F38').input()
            );

            // Update An Existing Product Form: activate an inline edit on click of a table cell that has the className attribute "editable" set to it
            $('#ProductUpdates').on('click', 'tbody td.editable', function (e) {
                editor.inline(this, {
                    onBlur: 'submit'
                });
            });

            // Update An Existing Product Form: set last updated date and last updated by upon edit
            editor.field('ProductUpdates.productstatusID').input().on('edit', function () {
                editor.field('ProductUpdates.lastupdatedon').val(getDate());
                editor.field('ProductUpdates.lastupdatedby').val(currentUser);
            });

            // Update An Existing Product Form: set completed date and completed by upon record completion
            editor.field('ProductUpdates.productstatusID').input().on('change', function (e, d) {
                if (editor.field('ProductUpdates.productstatusID').val() == '4' && (editor.field('ProductUpdates.completeddate').val() == null || editor.field('ProductUpdates.completeddate').val() == "") && (editor.field('ProductUpdates.completedby').val() == null || editor.field('ProductUpdates.completedby').val() == "")){
                    editor.field('ProductUpdates.completeddate').val(getDate());
                    editor.field('ProductUpdates.completedby').val(currentUser);
                }
            });

            // Update An Existing Product Form: send email to user's with requests marked as more info needed
            editor.field('ProductUpdates.productstatusID').input().on('blur', function () {
                if (editor.field('ProductUpdates.productstatusID').val() == '2') {

                    // Gather data from each selected row
                    var data = table.rows({ selected: true }).data();

                    var CreatedBy = data[0].createdby;

                    if (confirm('Send email?')) {
                        var subject = "More Info Needed";
                        var body = "Hi " + CreatedBy + ", ";
                        window.open('mailto:?subject=' + subject + '&body=' + body);
                    }
                };
            });

            // Product Maintenance: adds a drop down arrow next to the product status select list
            var dropDownArrow = function (data, type, row) {
                if (type === 'display') {
                    return data + ' <i class="fa fa-toggle-down style="font-size:18px;color:black""/>';
                }
                return data;
            };

            // Update An Existing Product Form: clear brand select field
            $(document).on('keydown', '#brandPU', function (event) {
                if (event.keyCode == 8 || event.keyCode == 46) {
                    editor.field('ProductUpdates.OBJ_TAB_F155').val(null);
                }
            });

            // Update An Existing Product Form: clear subdepartment select field
            $(document).on('keydown', '#subdepartmentPU', function (event) {
                if (event.keyCode == 8 || event.keyCode == 46) {
                    editor.field('ProductUpdates.POS_TAB_F04').val(null);
                }
            });

            // Update An Existing Product Form: clear category select field
            $(document).on('keydown', '#categoryPU', function (event) {
                if (event.keyCode == 8 || event.keyCode == 46) {
                    editor.field('ProductUpdates.OBJ_TAB_F17').val(null);
                }
            });

            // Update An Existing Product Form: clear report select field
            $(document).on('keydown', '#reportPU', function (event) {
                if (event.keyCode == 8 || event.keyCode == 46) {
                    editor.field('ProductUpdates.OBJ_TAB_F18').val(null);
                }
            });

            // Update An Existing Product Form: clear family select field
            $(document).on('keydown', '#familyPU', function (event) {
                if (event.keyCode == 8 || event.keyCode == 46) {
                    editor.field('ProductUpdates.OBJ_TAB_F16').val(null);
                }
            });

            // Update An Existing Product Form: clear like code select field
            $(document).on('keydown', '#likecodePU', function (event) {
                if (event.keyCode == 8 || event.keyCode == 46) {
                    editor.field('ProductUpdates.LIKE_TAB_F122').val(null);
                }
            });

            // Create the DataTables table
            var table = $('#ProductUpdates').DataTable({
                //serverSide: true,
                deferRender: true,
                autoWidth: false,
                select: true,
                // This is the default view showing uncompleted requests
                initComplete: function (e, dt, node, config) {
                    table
                        .column(0).search('^((?!(New Product)).)*$', true, false)
                        .column(2).search('^((?!(4 - Completed)).)*$', true, false).draw()
                },
                // Hide text overflow with ellipses
                columnDefs: [{
                    targets: 3,
                    render: function (data, type, row) {
                        if (type === 'display' && data != null) {
                            data = data.replace(/<(?:.|\\n)*?>/gm, '');
                            if (data.length > 14) {
                                return '<span class=\"show-ellipsis\">' + data.substr(0, 14) + '</span><span class=\"no-show\">' + data.substr(14) + '</span>';
                            } else {
                                return data;
                            }
                        } else {
                            return data;
                        }
                    }
                }],
                columnDefs: [
                    { orderable: false, targets: 1 }
                ],
                // Default table lengths
                lengthMenu: [[20, 50, 100, -1], [20, 50, 100, "All"]],
                // Table data source
                ajax: {
                    url: '/api/ProductUpdates'//,
                    //type: 'POST'
                },
                // Table columns
                columns: [
                    { "data": "RequestTypes.requestname", width: "10%" },
                    {
                        "data": null,
                        className: "center",
                        defaultContent: '<a href="" class="editor_edit"><i class="fa fa-pencil" style="font-size:18px;color:black"></i></a>',
                        width: "2%"
                    },
                    { "data": "Status.productupdatestatus", className: "editable", editField: "ProductUpdates.productstatusID", render: dropDownArrow},
                    { "data": "ProductUpdates.F01", width: "5%" },
                    { "data": "ProductUpdates.OBJ_TAB_F155", width: "10%" },
                    { "data": "ProductUpdates.OBJ_TAB_F29" },
                    { "data": "ProductUpdates.OBJ_TAB_F22", width: "5%" },
                    { "data": "ProductUpdates.promotprstartdate" },
                    { "data": "ProductUpdates.promotprenddate" },
                    { "data": "ProductUpdates.promotprprice",
                        "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "ProductUpdates.price_tab_f30",
                        "render": $.fn.dataTable.render.number(',', '.', 2, '$') },
                    { "data": "ProductUpdates.createdby" },
                    {
                        "data": "ProductUpdates.datecreated", "render": function (value) {
                            if (value === null) return "";
                            return window.moment(value).format('M/D/YYYY h:mm:ss A');
                        }
                    },
                    { "data": "ProductUpdates.completeddate", visible: false },
                    { "data": "ProductUpdates.locationID", visible: false }
                ],
                // Change New Products request type background green
                rowCallback: function (row, data, index) {
                    if (data.RequestTypes.requestname == "New Product") { $(row).find('td:eq(0)').css('background-color', '#FAC090'); }
                    if (data.RequestTypes.requestname !== "New Product") { $(row).find('td:eq(0)').css('background-color', '#E6EDD7'); }
                },
                // Control button layout
                dom: '<"floatRight"B><"clear">lfrtip',
                order: [[12, "desc"]],
                // Default table order
                buttons: [
                    {
                        // Custom Promotion Report button
                        text: 'Promotion Report', formTitle: 'Run Promotion Report', extend: 'create', editor: editorPR,
                        formButtons:
                            [{
                                text: 'Run Report',
                                action: function (e, dt, node, config) {
                                    switch ( editorPR.field('ProductUpdates.requesttypeID').val() )
                                    {
                                        case 1:
                                            var promo = "Product Info Update";
                                            break;
                                        case 2:
                                            var promo = "Happy Hour";
                                            break;
                                        case 3:
                                            var promo = "Member Specials";
                                            break;
                                        case 4:
                                            var promo = "PFC Fresh Deals";
                                            break;
                                        case 5:
                                            var promo = "Ad Hoc Promo";
                                            break;
                                        case 6:
                                            var promo = "New Product";
                                            break;
                                        case 7:
                                            var promo = "Co-op Deals Correction";
                                            break;
                                        case 8:
                                            var promo = "Flash Sale";
                                            break;
                                        case 9:
                                            var promo = "NCG Fresh Deals";
                                            break;
                                        case 10:
                                            var promo = "Hackberry's Menu Item";
                                            break;
                                    };

                                    var locale = editorPR.field('ProductUpdates.locationID').val()
                                    var startDate = editorPR.field('ProductUpdates.promotprstartdate').val();
                                    var endDate = editorPR.field('ProductUpdates.promotprenddate').val();

                                    table.search('')
                                        .columns().search('')
                                        .column(0).search('^' + promo + '$', true, false)
                                        .column(7).search('^' + startDate + '$', true, false)
                                        .column(8).search('^' + endDate + '$', true, false)
                                        .column(14).search('^' + locale + '$', true, false).draw()
                                    this.close();
                                }
                            }],
                        onReturn: false
                    },
                    {
                        // Show completed today filter button
                        text: 'Show Completed Today', action: function (e, dt, node, config) {
                            table.search('')
                                .columns().search('')
                                .columns().order('')
                                .column(0).search('^((?!(New Product)).)*$', true, false)
                                .column(2).search('^4 - Completed$', true, false)
                                .column(13).search(new Date().getMonth() + 1 + "/" + new Date().getDate() + "/" + new Date().getFullYear(), true, false).column(12).order('desc').draw()
                        }
                    },
                    {
                        // Show default view filter button
                        text: 'Show Default View', action: function (e, dt, node, config) {
                            table.search('')
                                .columns().search('')
                                .columns().order('')
                                .page.len(20)
                                .column(0).search('^((?!(New Product)).)*$', true, false)
                                .column(2).search('^((?!(4 - Completed)).)*$', true, false).column(12).order('desc').draw();
                        }
                    },
                    {
                        // Show all records filter button
                        text: 'Show All', action: function (e, dt, node, config) {
                            table.search('')
                                .columns().search('')
                                .columns().order('')
                                .column(0).search('^((?!(New Product)).)*$', true, false)
                                .column(2).search('^1 - Waiting for Manager Review$|^2 - More Info Needed$|^3 - Manager Review Completed$|^4 - Completed$', true, false).column(12).order('desc').draw();
                        }
                    },
                    {
                        // Export table button
                        extend: 'collection', text: 'Export', autoClose: true,
                        buttons: [
                            'copy',
                            'excel',
                            'csv',
                            'pdf',
                            'print'
                        ]
                    },

                    // Redirects user back to main Product Maintenance page
                    { text: 'Back', action: function () { window.location = 'ProductMaintenance' } }
                ]
            });

            // Product Maintenance: adds edit pencil in each cell
            $('#ProductUpdates').on('click', 'a.editor_edit', function (e) {
                e.preventDefault();

                editor.edit($(this).closest('tr'), {
                    title: 'Edit entry',
                    buttons:
                        [
                            {
                                text: 'Update', action: function () {
                                    editor.field('ProductUpdates.lastupdatedon').val(getDate());
                                    editor.field('ProductUpdates.lastupdatedby').val(currentUser);
                                    this.submit();
                                }
                            }
                        ]
                });
            });
        });
    </script>
}